#!/usr/bin/env python

import argparse
import json
import pathlib
import sys

from bureaucracy import VogonBuilder, VogonExplorer, VogonPoet

subcommands = ["poet", "explorer", "build"]

parser = argparse.ArgumentParser(description="~@ vogon @~")
subparsers = parser.add_subparsers()

subparser_poet = subparsers.add_parser("poet")
subparser_explorer = subparsers.add_parser("explorer")

for name, subparser in {"poet": subparser_poet, "explorer": subparser_explorer}.items():

    subparser.set_defaults(variant=name)

    subparser.add_argument(
        "-i", "--image", help="Use a different docker image",
    )

    subparser.add_argument(
        "-r",
        "--repo",
        help="Mount a local directory as a repo (defaults to the current directory)",
        default=".",
    )

    subparser.add_argument(
        "-m", "--mnt-dir", help="Mount a local directory as a docker volume"
    )

    subparser.add_argument(
        "-j", "--jupyterlab", help="start a jupyterlab session", action="store_true",
    )

    subparser.add_argument(
        "-s", "--ssh", help="mount your ~/.ssh folder", action="store_true",
    )

    subparser.add_argument(
        "-p",
        "--python-version",
        choices=["3.8", "3.9"],
        help="Python version to use",
        default="3.8",
    )

subparser_build = subparsers.add_parser("build")
subparser_build.set_defaults(variant="build")


def main():
    args = parser.parse_args()

    vogon_config_file = pathlib.Path.home() / ".vogonconfig"
    if vogon_config_file.exists():
        with open(vogon_config_file, "r") as fh:
            vogon_config = json.load(fh)
    else:
        vogon_config = {}

    if args.variant == "build":
        vogon = VogonBuilder()
    else:
        if args.image:
            image = args.image
        elif vogon_config.get("default_image", None):
            image = vogon_config["default_image"]
        else:
            raise Exception(
                "No image name specified. Either use the -i flag or define a default_image in your ~/.vogonconfig file."
            )

        if args.variant == "poet":
            vogon = VogonPoet(
                docker_image_name=image,
                repo_dir=args.repo,
                mnt_dir=args.mnt_dir,
                start_jupyter_lab=args.jupyterlab,
                mount_ssh_dir=args.ssh,
                python_version=args.python_version,
            )

        elif args.variant == "explorer":
            raise NotImplementedError(
                "VogonExplorer is currently under intergalactic highway construction."
            )

    vogon.launch()


if __name__ == "__main__":
    sys.exit(main())
